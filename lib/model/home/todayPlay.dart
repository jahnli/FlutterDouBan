///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class TodayPlayModelVideosTrailer {
/*
{
  "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/movie/2997052/trailer%3Ftrailer_id%3D102045%26trailer_type%3DA",
  "video_url": "http://vt1.doubanio.com/201910161236/f46f751551eadb21ddb1c5c585b9fe98/view/movie/M/301020045-1.mp4",
  "title": "香港预告片 (中文字幕)",
  "uri": "douban://douban.com/movie/2997052/trailer?trailer_id=102045&trailer_type=A",
  "cover_url": "https://img1.doubanio.com/img/trailer/medium/1256041068.jpg?",
  "term_num": 0,
  "n_comments": 14,
  "create_time": "2011-10-15",
  "subject_title": "吾栖之肤",
  "file_size": 6614042,
  "runtime": "01:10",
  "type": "A",
  "id": "102045",
  "desc": ""
} 
*/

  String sharingUrl;
  String videoUrl;
  String title;
  String uri;
  String coverUrl;
  int termNum;
  int nComments;
  String createTime;
  String subjectTitle;
  int fileSize;
  String runtime;
  String type;
  String id;
  String desc;

  TodayPlayModelVideosTrailer({
    this.sharingUrl,
    this.videoUrl,
    this.title,
    this.uri,
    this.coverUrl,
    this.termNum,
    this.nComments,
    this.createTime,
    this.subjectTitle,
    this.fileSize,
    this.runtime,
    this.type,
    this.id,
    this.desc,
  });
  TodayPlayModelVideosTrailer.fromJson(Map<String, dynamic> json) {
    sharingUrl = json["sharing_url"]?.toString();
    videoUrl = json["video_url"]?.toString();
    title = json["title"]?.toString();
    uri = json["uri"]?.toString();
    coverUrl = json["cover_url"]?.toString();
    termNum = json["term_num"]?.toInt();
    nComments = json["n_comments"]?.toInt();
    createTime = json["create_time"]?.toString();
    subjectTitle = json["subject_title"]?.toString();
    fileSize = json["file_size"]?.toInt();
    runtime = json["runtime"]?.toString();
    type = json["type"]?.toString();
    id = json["id"]?.toString();
    desc = json["desc"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["sharing_url"] = sharingUrl;
    data["video_url"] = videoUrl;
    data["title"] = title;
    data["uri"] = uri;
    data["cover_url"] = coverUrl;
    data["term_num"] = termNum;
    data["n_comments"] = nComments;
    data["create_time"] = createTime;
    data["subject_title"] = subjectTitle;
    data["file_size"] = fileSize;
    data["runtime"] = runtime;
    data["type"] = type;
    data["id"] = id;
    data["desc"] = desc;
    return data;
  }
}

class TodayPlayModelVideosDirectors {
/*
{
  "name": "佩德罗·阿莫多瓦"
} 
*/

  String name;

  TodayPlayModelVideosDirectors({
    this.name,
  });
  TodayPlayModelVideosDirectors.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    return data;
  }
}

class TodayPlayModelVideosColorScheme {
/*
{
  "is_dark": true,
  "primary_color_light": "a57e73",
  "_base_color": [
    0.03508771929824565
  ],
  "secondary_color": "f9f5f4",
  "_avg_color": [
    0.033333333333333305
  ],
  "primary_color_dark": "7f6058"
} 
*/

  bool isDark;
  String primaryColorLight;
  List<double> BaseColor;
  String secondaryColor;
  List<double> AvgColor;
  String primaryColorDark;

  TodayPlayModelVideosColorScheme({
    this.isDark,
    this.primaryColorLight,
    this.BaseColor,
    this.secondaryColor,
    this.AvgColor,
    this.primaryColorDark,
  });
  TodayPlayModelVideosColorScheme.fromJson(Map<String, dynamic> json) {
    isDark = json["is_dark"];
    primaryColorLight = json["primary_color_light"]?.toString();
  if (json["_base_color"] != null) {
  var v = json["_base_color"];
  var arr0 = List<double>();
  v.forEach((v) {
  arr0.add(v.toDouble());
  });
    BaseColor = arr0;
    }
    secondaryColor = json["secondary_color"]?.toString();
  if (json["_avg_color"] != null) {
  var v = json["_avg_color"];
  var arr0 = List<double>();
  v.forEach((v) {
  arr0.add(v.toDouble());
  });
    AvgColor = arr0;
    }
    primaryColorDark = json["primary_color_dark"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["is_dark"] = isDark;
    data["primary_color_light"] = primaryColorLight;
    if (BaseColor != null) {
      var v = BaseColor;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["_base_color"] = arr0;
    }
    data["secondary_color"] = secondaryColor;
    if (AvgColor != null) {
      var v = AvgColor;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["_avg_color"] = arr0;
    }
    data["primary_color_dark"] = primaryColorDark;
    return data;
  }
}

class TodayPlayModelVideosActors {
/*
{
  "name": "安东尼奥·班德拉斯"
} 
*/

  String name;

  TodayPlayModelVideosActors({
    this.name,
  });
  TodayPlayModelVideosActors.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    return data;
  }
}

class TodayPlayModelVideosVendorsPayments {
/*
{
  "price": "",
  "description": "",
  "method": "免费观看"
} 
*/

  String price;
  String description;
  String method;

  TodayPlayModelVideosVendorsPayments({
    this.price,
    this.description,
    this.method,
  });
  TodayPlayModelVideosVendorsPayments.fromJson(Map<String, dynamic> json) {
    price = json["price"]?.toString();
    description = json["description"]?.toString();
    method = json["method"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["price"] = price;
    data["description"] = description;
    data["method"] = method;
    return data;
  }
}

class TodayPlayModelVideosVendors {
/*
{
  "labels": [
    null
  ],
  "app_uri": "migumovie://skynet.douban.com",
  "grey_icon": "https://img3.doubanio.com/f/frodo/655b4223c61553b9866b17143e3cd702a5b563a8/pics/vendors/migu_movie_grey.png",
  "title": "咪咕影院",
  "url": "https://movie.miguvideo.com/publish/i_www/resource/lovev/subject/share/douban.jsp?pwId=6d940f6d900d48928507ebdee0826804&channelId=30100000038&cid=625789583",
  "app_bundle_id": "com.cmvideo.migumovie",
  "selected": false,
  "uri": "migumovie://migumovie?channelId=30100000038&lastPageName=douban&action=%7B%22name%22%3A%22JUMP_INNER_PAGE%22%2C%22type%22%3A%22JUMP_INNER_PAGE%22%2C%22params%22%3A%7B%22pageID%22%3A%22MV_DETAIL_FILM_PAGE%22%2C%22contentID%22%3A%22625789583%22%2C%22extra%22%3A%7B%22isPlayable%22%3A0%7D%7D%7D&pwId=14e28fddac034f44b4917851dc0284bf",
  "id": "migumovie",
  "is_vip": false,
  "payments": [
    {
      "price": "",
      "description": "",
      "method": "免费观看"
    }
  ],
  "payment_desc": "免费观看",
  "pre_release_desc": "",
  "is_ad": true,
  "icon": "https://img3.doubanio.com/f/frodo/e94c4c6684571584fe5c1814718aa8e8824fdda3/pics/vendors/migu_movie.png"
} 
*/

  List labels;
  String appUri;
  String greyIcon;
  String title;
  String url;
  String appBundleId;
  bool selected;
  String uri;
  String id;
  bool isVip;
  List<TodayPlayModelVideosVendorsPayments> payments;
  String paymentDesc;
  String preReleaseDesc;
  bool isAd;
  String icon;

  TodayPlayModelVideosVendors({
    this.labels,
    this.appUri,
    this.greyIcon,
    this.title,
    this.url,
    this.appBundleId,
    this.selected,
    this.uri,
    this.id,
    this.isVip,
    this.payments,
    this.paymentDesc,
    this.preReleaseDesc,
    this.isAd,
    this.icon,
  });
  TodayPlayModelVideosVendors.fromJson(Map<String, dynamic> json) {
    appUri = json["app_uri"]?.toString();
    greyIcon = json["grey_icon"]?.toString();
    title = json["title"]?.toString();
    url = json["url"]?.toString();
    appBundleId = json["app_bundle_id"]?.toString();
    selected = json["selected"];
    uri = json["uri"]?.toString();
    id = json["id"]?.toString();
    isVip = json["is_vip"];
  if (json["payments"] != null) {
  var v = json["payments"];
  var arr0 = List<TodayPlayModelVideosVendorsPayments>();
  v.forEach((v) {
  arr0.add(TodayPlayModelVideosVendorsPayments.fromJson(v));
  });
    payments = arr0;
    }
    paymentDesc = json["payment_desc"]?.toString();
    preReleaseDesc = json["pre_release_desc"]?.toString();
    isAd = json["is_ad"];
    icon = json["icon"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["app_uri"] = appUri;
    data["grey_icon"] = greyIcon;
    data["title"] = title;
    data["url"] = url;
    data["app_bundle_id"] = appBundleId;
    data["selected"] = selected;
    data["uri"] = uri;
    data["id"] = id;
    data["is_vip"] = isVip;
    if (payments != null) {
      var v = payments;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["payments"] = arr0;
    }
    data["payment_desc"] = paymentDesc;
    data["pre_release_desc"] = preReleaseDesc;
    data["is_ad"] = isAd;
    data["icon"] = icon;
    return data;
  }
}

class TodayPlayModelVideosPic {
/*
{
  "large": "https://img1.doubanio.com/view/photo/m_ratio_poster/public/p1221998208.jpg",
  "normal": "https://img1.doubanio.com/view/photo/s_ratio_poster/public/p1221998208.jpg"
} 
*/

  String large;
  String normal;

  TodayPlayModelVideosPic({
    this.large,
    this.normal,
  });
  TodayPlayModelVideosPic.fromJson(Map<String, dynamic> json) {
    large = json["large"]?.toString();
    normal = json["normal"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["large"] = large;
    data["normal"] = normal;
    return data;
  }
}

class TodayPlayModelVideosRating {
/*
{
  "count": 100319,
  "max": 10,
  "star_count": 4,
  "value": 7.6
} 
*/

  int count;
  int max;
  int starCount;
  double value;

  TodayPlayModelVideosRating({
    this.count,
    this.max,
    this.starCount,
    this.value,
  });
  TodayPlayModelVideosRating.fromJson(Map<String, dynamic> json) {
    count = json["count"]?.toInt();
    max = json["max"]?.toInt();
    starCount = json["star_count"]?.toInt();
    value = json["value"]?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["count"] = count;
    data["max"] = max;
    data["star_count"] = starCount;
    data["value"] = value;
    return data;
  }
}

class TodayPlayModelVideos {
/*
{
  "rating": {
    "count": 100319,
    "max": 10,
    "star_count": 4,
    "value": 7.6
  },
  "pubdate": [
    "2011-08-17(法国)"
  ],
  "pic": {
    "large": "https://img1.doubanio.com/view/photo/m_ratio_poster/public/p1221998208.jpg",
    "normal": "https://img1.doubanio.com/view/photo/s_ratio_poster/public/p1221998208.jpg"
  },
  "is_show": false,
  "payment_desc": "免费观看",
  "year": "2011",
  "card_subtitle": "2011 / 西班牙 / 惊悚 / 佩德罗·阿莫多瓦 / 安东尼奥·班德拉斯 埃伦娜·安纳亚",
  "id": "2997052",
  "genres": [
    "惊悚"
  ],
  "title": "吾栖之肤",
  "is_released": true,
  "vendors": [
    {
      "labels": [
        null
      ],
      "app_uri": "migumovie://skynet.douban.com",
      "grey_icon": "https://img3.doubanio.com/f/frodo/655b4223c61553b9866b17143e3cd702a5b563a8/pics/vendors/migu_movie_grey.png",
      "title": "咪咕影院",
      "url": "https://movie.miguvideo.com/publish/i_www/resource/lovev/subject/share/douban.jsp?pwId=6d940f6d900d48928507ebdee0826804&channelId=30100000038&cid=625789583",
      "app_bundle_id": "com.cmvideo.migumovie",
      "selected": false,
      "uri": "migumovie://migumovie?channelId=30100000038&lastPageName=douban&action=%7B%22name%22%3A%22JUMP_INNER_PAGE%22%2C%22type%22%3A%22JUMP_INNER_PAGE%22%2C%22params%22%3A%7B%22pageID%22%3A%22MV_DETAIL_FILM_PAGE%22%2C%22contentID%22%3A%22625789583%22%2C%22extra%22%3A%7B%22isPlayable%22%3A0%7D%7D%7D&pwId=14e28fddac034f44b4917851dc0284bf",
      "id": "migumovie",
      "is_vip": false,
      "payments": [
        {
          "price": "",
          "description": "",
          "method": "免费观看"
        }
      ],
      "payment_desc": "免费观看",
      "pre_release_desc": "",
      "is_ad": true,
      "icon": "https://img3.doubanio.com/f/frodo/e94c4c6684571584fe5c1814718aa8e8824fdda3/pics/vendors/migu_movie.png"
    }
  ],
  "actors": [
    {
      "name": "安东尼奥·班德拉斯"
    }
  ],
  "interest": null,
  "header_bg_color": "7f6058",
  "color_scheme": {
    "is_dark": true,
    "primary_color_light": "a57e73",
    "_base_color": [
      0.03508771929824565
    ],
    "secondary_color": "f9f5f4",
    "_avg_color": [
      0.033333333333333305
    ],
    "primary_color_dark": "7f6058"
  },
  "type": "movie",
  "blurb": "",
  "alg_json": "{}",
  "forum_info": null,
  "has_linewatch": false,
  "background_url": "https://img1.doubanio.com/view/photo/photo/public/p999673657.jpg",
  "durations": [
    "117分钟"
  ],
  "photos": [
    "https://img1.doubanio.com/view/photo/photo/public/p999673657.jpg"
  ],
  "sharing_url": "https://www.douban.com/doubanapp/dispatch/movie/2997052",
  "countries": [
    "西班牙"
  ],
  "url": "https://movie.douban.com/subject/2997052/",
  "created_at": null,
  "uri": "douban://douban.com/movie/2997052",
  "subtype": "movie",
  "directors": [
    {
      "name": "佩德罗·阿莫多瓦"
    }
  ],
  "intro": "在位于郊外的华丽别墅内，人过中年的整形医生罗伯特·雷德加（安东尼奥·班德拉斯 Antonio Banderas 饰）和忠心老仆人玛丽莉娅（Marisa Paredes 饰）居住于此。在过去的十二年里，他先后失去了妻子盖儿和女儿诺玛（Ana Mena 饰），一桩桩人间惨剧彻底颠覆了罗伯特看似完美的生活，同时也将他的事业与研究推向了完全未知的领域。在别墅的某个神秘房间内，居住着一个美丽且与世隔绝的女子，她叫薇拉（埃琳娜·安纳亚 Elena Anaya 饰），既是罗伯特的病人，又是他的实验对象，二人有着纷繁错乱的渊源。她经罗伯特之手精心塑造出来的容颜，将彼此紧紧缠绕在了一起……\n本片荣获2011年华盛顿影评人协会最佳外语片奖。",
  "null_rating_reason": "",
  "req_id": "",
  "pre_release_desc": "",
  "release_date": null,
  "trailer": {
    "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/movie/2997052/trailer%3Ftrailer_id%3D102045%26trailer_type%3DA",
    "video_url": "http://vt1.doubanio.com/201910161236/f46f751551eadb21ddb1c5c585b9fe98/view/movie/M/301020045-1.mp4",
    "title": "香港预告片 (中文字幕)",
    "uri": "douban://douban.com/movie/2997052/trailer?trailer_id=102045&trailer_type=A",
    "cover_url": "https://img1.doubanio.com/img/trailer/medium/1256041068.jpg?",
    "term_num": 0,
    "n_comments": 14,
    "create_time": "2011-10-15",
    "subject_title": "吾栖之肤",
    "file_size": 6614042,
    "runtime": "01:10",
    "type": "A",
    "id": "102045",
    "desc": ""
  }
} 
*/

  TodayPlayModelVideosRating rating;
  List<String> pubdate;
  TodayPlayModelVideosPic pic;
  bool isShow;
  String paymentDesc;
  String year;
  String cardSubtitle;
  String id;
  List<String> genres;
  String title;
  bool isReleased;
  List<TodayPlayModelVideosVendors> vendors;
  List<TodayPlayModelVideosActors> actors;
  String interest;
  String headerBgColor;
  TodayPlayModelVideosColorScheme colorScheme;
  String type;
  String blurb;
  String algJson;
  String forumInfo;
  bool hasLinewatch;
  String backgroundUrl;
  List<String> durations;
  List<String> photos;
  String sharingUrl;
  List<String> countries;
  String url;
  String createdAt;
  String uri;
  String subtype;
  List<TodayPlayModelVideosDirectors> directors;
  String intro;
  String nullRatingReason;
  String reqId;
  String preReleaseDesc;
  String releaseDate;
  TodayPlayModelVideosTrailer trailer;

  TodayPlayModelVideos({
    this.rating,
    this.pubdate,
    this.pic,
    this.isShow,
    this.paymentDesc,
    this.year,
    this.cardSubtitle,
    this.id,
    this.genres,
    this.title,
    this.isReleased,
    this.vendors,
    this.actors,
    this.interest,
    this.headerBgColor,
    this.colorScheme,
    this.type,
    this.blurb,
    this.algJson,
    this.forumInfo,
    this.hasLinewatch,
    this.backgroundUrl,
    this.durations,
    this.photos,
    this.sharingUrl,
    this.countries,
    this.url,
    this.createdAt,
    this.uri,
    this.subtype,
    this.directors,
    this.intro,
    this.nullRatingReason,
    this.reqId,
    this.preReleaseDesc,
    this.releaseDate,
    this.trailer,
  });
  TodayPlayModelVideos.fromJson(Map<String, dynamic> json) {
    rating = json["rating"] != null ? TodayPlayModelVideosRating.fromJson(json["rating"]) : null;
  if (json["pubdate"] != null) {
  var v = json["pubdate"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    pubdate = arr0;
    }
    pic = json["pic"] != null ? TodayPlayModelVideosPic.fromJson(json["pic"]) : null;
    isShow = json["is_show"];
    paymentDesc = json["payment_desc"]?.toString();
    year = json["year"]?.toString();
    cardSubtitle = json["card_subtitle"]?.toString();
    id = json["id"]?.toString();
  if (json["genres"] != null) {
  var v = json["genres"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    genres = arr0;
    }
    title = json["title"]?.toString();
    isReleased = json["is_released"];
  if (json["vendors"] != null) {
  var v = json["vendors"];
  var arr0 = List<TodayPlayModelVideosVendors>();
  v.forEach((v) {
  arr0.add(TodayPlayModelVideosVendors.fromJson(v));
  });
    vendors = arr0;
    }
  if (json["actors"] != null) {
  var v = json["actors"];
  var arr0 = List<TodayPlayModelVideosActors>();
  v.forEach((v) {
  arr0.add(TodayPlayModelVideosActors.fromJson(v));
  });
    actors = arr0;
    }
    interest = json["interest"]?.toString();
    headerBgColor = json["header_bg_color"]?.toString();
    colorScheme = json["color_scheme"] != null ? TodayPlayModelVideosColorScheme.fromJson(json["color_scheme"]) : null;
    type = json["type"]?.toString();
    blurb = json["blurb"]?.toString();
    algJson = json["alg_json"]?.toString();
    forumInfo = json["forum_info"]?.toString();
    hasLinewatch = json["has_linewatch"];
    backgroundUrl = json["background_url"]?.toString();
  if (json["durations"] != null) {
  var v = json["durations"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    durations = arr0;
    }
  if (json["photos"] != null) {
  var v = json["photos"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    photos = arr0;
    }
    sharingUrl = json["sharing_url"]?.toString();
  if (json["countries"] != null) {
  var v = json["countries"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    countries = arr0;
    }
    url = json["url"]?.toString();
    createdAt = json["created_at"]?.toString();
    uri = json["uri"]?.toString();
    subtype = json["subtype"]?.toString();
  if (json["directors"] != null) {
  var v = json["directors"];
  var arr0 = List<TodayPlayModelVideosDirectors>();
  v.forEach((v) {
  arr0.add(TodayPlayModelVideosDirectors.fromJson(v));
  });
    directors = arr0;
    }
    intro = json["intro"]?.toString();
    nullRatingReason = json["null_rating_reason"]?.toString();
    reqId = json["req_id"]?.toString();
    preReleaseDesc = json["pre_release_desc"]?.toString();
    releaseDate = json["release_date"]?.toString();
    trailer = json["trailer"] != null ? TodayPlayModelVideosTrailer.fromJson(json["trailer"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (rating != null) {
      data["rating"] = rating.toJson();
    }
    if (pubdate != null) {
      var v = pubdate;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["pubdate"] = arr0;
    }
    if (pic != null) {
      data["pic"] = pic.toJson();
    }
    data["is_show"] = isShow;
    data["payment_desc"] = paymentDesc;
    data["year"] = year;
    data["card_subtitle"] = cardSubtitle;
    data["id"] = id;
    if (genres != null) {
      var v = genres;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["genres"] = arr0;
    }
    data["title"] = title;
    data["is_released"] = isReleased;
    if (vendors != null) {
      var v = vendors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["vendors"] = arr0;
    }
    if (actors != null) {
      var v = actors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["actors"] = arr0;
    }
    data["interest"] = interest;
    data["header_bg_color"] = headerBgColor;
    if (colorScheme != null) {
      data["color_scheme"] = colorScheme.toJson();
    }
    data["type"] = type;
    data["blurb"] = blurb;
    data["alg_json"] = algJson;
    data["forum_info"] = forumInfo;
    data["has_linewatch"] = hasLinewatch;
    data["background_url"] = backgroundUrl;
    if (durations != null) {
      var v = durations;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["durations"] = arr0;
    }
    if (photos != null) {
      var v = photos;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["photos"] = arr0;
    }
    data["sharing_url"] = sharingUrl;
    if (countries != null) {
      var v = countries;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["countries"] = arr0;
    }
    data["url"] = url;
    data["created_at"] = createdAt;
    data["uri"] = uri;
    data["subtype"] = subtype;
    if (directors != null) {
      var v = directors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["directors"] = arr0;
    }
    data["intro"] = intro;
    data["null_rating_reason"] = nullRatingReason;
    data["req_id"] = reqId;
    data["pre_release_desc"] = preReleaseDesc;
    data["release_date"] = releaseDate;
    if (trailer != null) {
      data["trailer"] = trailer.toJson();
    }
    return data;
  }
}

class TodayPlayModel {
/*
{
  "count": 3,
  "body_image": "",
  "videos": [
    {
      "rating": {
        "count": 100319,
        "max": 10,
        "star_count": 4,
        "value": 7.6
      },
      "pubdate": [
        "2011-08-17(法国)"
      ],
      "pic": {
        "large": "https://img1.doubanio.com/view/photo/m_ratio_poster/public/p1221998208.jpg",
        "normal": "https://img1.doubanio.com/view/photo/s_ratio_poster/public/p1221998208.jpg"
      },
      "is_show": false,
      "payment_desc": "免费观看",
      "year": "2011",
      "card_subtitle": "2011 / 西班牙 / 惊悚 / 佩德罗·阿莫多瓦 / 安东尼奥·班德拉斯 埃伦娜·安纳亚",
      "id": "2997052",
      "genres": [
        "惊悚"
      ],
      "title": "吾栖之肤",
      "is_released": true,
      "vendors": [
        {
          "labels": [
            null
          ],
          "app_uri": "migumovie://skynet.douban.com",
          "grey_icon": "https://img3.doubanio.com/f/frodo/655b4223c61553b9866b17143e3cd702a5b563a8/pics/vendors/migu_movie_grey.png",
          "title": "咪咕影院",
          "url": "https://movie.miguvideo.com/publish/i_www/resource/lovev/subject/share/douban.jsp?pwId=6d940f6d900d48928507ebdee0826804&channelId=30100000038&cid=625789583",
          "app_bundle_id": "com.cmvideo.migumovie",
          "selected": false,
          "uri": "migumovie://migumovie?channelId=30100000038&lastPageName=douban&action=%7B%22name%22%3A%22JUMP_INNER_PAGE%22%2C%22type%22%3A%22JUMP_INNER_PAGE%22%2C%22params%22%3A%7B%22pageID%22%3A%22MV_DETAIL_FILM_PAGE%22%2C%22contentID%22%3A%22625789583%22%2C%22extra%22%3A%7B%22isPlayable%22%3A0%7D%7D%7D&pwId=14e28fddac034f44b4917851dc0284bf",
          "id": "migumovie",
          "is_vip": false,
          "payments": [
            {
              "price": "",
              "description": "",
              "method": "免费观看"
            }
          ],
          "payment_desc": "免费观看",
          "pre_release_desc": "",
          "is_ad": true,
          "icon": "https://img3.doubanio.com/f/frodo/e94c4c6684571584fe5c1814718aa8e8824fdda3/pics/vendors/migu_movie.png"
        }
      ],
      "actors": [
        {
          "name": "安东尼奥·班德拉斯"
        }
      ],
      "interest": null,
      "header_bg_color": "7f6058",
      "color_scheme": {
        "is_dark": true,
        "primary_color_light": "a57e73",
        "_base_color": [
          0.03508771929824565
        ],
        "secondary_color": "f9f5f4",
        "_avg_color": [
          0.033333333333333305
        ],
        "primary_color_dark": "7f6058"
      },
      "type": "movie",
      "blurb": "",
      "alg_json": "{}",
      "forum_info": null,
      "has_linewatch": false,
      "background_url": "https://img1.doubanio.com/view/photo/photo/public/p999673657.jpg",
      "durations": [
        "117分钟"
      ],
      "photos": [
        "https://img1.doubanio.com/view/photo/photo/public/p999673657.jpg"
      ],
      "sharing_url": "https://www.douban.com/doubanapp/dispatch/movie/2997052",
      "countries": [
        "西班牙"
      ],
      "url": "https://movie.douban.com/subject/2997052/",
      "created_at": null,
      "uri": "douban://douban.com/movie/2997052",
      "subtype": "movie",
      "directors": [
        {
          "name": "佩德罗·阿莫多瓦"
        }
      ],
      "intro": "在位于郊外的华丽别墅内，人过中年的整形医生罗伯特·雷德加（安东尼奥·班德拉斯 Antonio Banderas 饰）和忠心老仆人玛丽莉娅（Marisa Paredes 饰）居住于此。在过去的十二年里，他先后失去了妻子盖儿和女儿诺玛（Ana Mena 饰），一桩桩人间惨剧彻底颠覆了罗伯特看似完美的生活，同时也将他的事业与研究推向了完全未知的领域。在别墅的某个神秘房间内，居住着一个美丽且与世隔绝的女子，她叫薇拉（埃琳娜·安纳亚 Elena Anaya 饰），既是罗伯特的病人，又是他的实验对象，二人有着纷繁错乱的渊源。她经罗伯特之手精心塑造出来的容颜，将彼此紧紧缠绕在了一起……\n本片荣获2011年华盛顿影评人协会最佳外语片奖。",
      "null_rating_reason": "",
      "req_id": "",
      "pre_release_desc": "",
      "release_date": null,
      "trailer": {
        "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/movie/2997052/trailer%3Ftrailer_id%3D102045%26trailer_type%3DA",
        "video_url": "http://vt1.doubanio.com/201910161236/f46f751551eadb21ddb1c5c585b9fe98/view/movie/M/301020045-1.mp4",
        "title": "香港预告片 (中文字幕)",
        "uri": "douban://douban.com/movie/2997052/trailer?trailer_id=102045&trailer_type=A",
        "cover_url": "https://img1.doubanio.com/img/trailer/medium/1256041068.jpg?",
        "term_num": 0,
        "n_comments": 14,
        "create_time": "2011-10-15",
        "subject_title": "吾栖之肤",
        "file_size": 6614042,
        "runtime": "01:10",
        "type": "A",
        "id": "102045",
        "desc": ""
      }
    }
  ],
  "title": "今日可播放电影已更新",
  "display_total": true,
  "start": 0,
  "total": 30,
  "done_count": 0
} 
*/

  int count;
  String bodyImage;
  List<TodayPlayModelVideos> videos;
  String title;
  bool displayTotal;
  int start;
  int total;
  int doneCount;

  TodayPlayModel({
    this.count,
    this.bodyImage,
    this.videos,
    this.title,
    this.displayTotal,
    this.start,
    this.total,
    this.doneCount,
  });
  TodayPlayModel.fromJson(Map<String, dynamic> json) {
    count = json["count"]?.toInt();
    bodyImage = json["body_image"]?.toString();
  if (json["videos"] != null) {
  var v = json["videos"];
  var arr0 = List<TodayPlayModelVideos>();
  v.forEach((v) {
  arr0.add(TodayPlayModelVideos.fromJson(v));
  });
    videos = arr0;
    }
    title = json["title"]?.toString();
    displayTotal = json["display_total"];
    start = json["start"]?.toInt();
    total = json["total"]?.toInt();
    doneCount = json["done_count"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["count"] = count;
    data["body_image"] = bodyImage;
    if (videos != null) {
      var v = videos;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["videos"] = arr0;
    }
    data["title"] = title;
    data["display_total"] = displayTotal;
    data["start"] = start;
    data["total"] = total;
    data["done_count"] = doneCount;
    return data;
  }
}

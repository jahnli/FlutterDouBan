///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class MovieShowModelDataSubjectCollectionBoardsItemsCover {
/*
{
  "url": "https://img3.doubanio.com/view/photo/m_ratio_poster/public/p2570906505.jpg",
  "width": 2187,
  "shape": "rectangle",
  "height": 3000
} 
*/

  String url;
  int width;
  String shape;
  int height;

  MovieShowModelDataSubjectCollectionBoardsItemsCover({
    this.url,
    this.width,
    this.shape,
    this.height,
  });
  MovieShowModelDataSubjectCollectionBoardsItemsCover.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    width = json["width"]?.toInt();
    shape = json["shape"]?.toString();
    height = json["height"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["width"] = width;
    data["shape"] = shape;
    data["height"] = height;
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoardsItemsRating {
/*
{
  "count": 6670,
  "max": 10,
  "value": 7
} 
*/

  int count;
  int max;
  double value;

  MovieShowModelDataSubjectCollectionBoardsItemsRating({
    this.count,
    this.max,
    this.value,
  });
  MovieShowModelDataSubjectCollectionBoardsItemsRating.fromJson(Map<String, dynamic> json) {
    count = json["count"]?.toInt();
    max = json["max"]?.toInt();
    value = json["value"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["count"] = count;
    data["max"] = max;
    data["value"] = value;
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoardsItems {
/*
{
  "original_price": null,
  "rating": {
    "count": 6670,
    "max": 10,
    "value": 7
  },
  "actions": [
    null
  ],
  "year": "2019",
  "card_subtitle": "2019 / 美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
  "id": "3097572",
  "title": "双子杀手",
  "label": null,
  "actors": [
    "威尔·史密斯"
  ],
  "interest": null,
  "type": "movie",
  "forum_info": null,
  "description": "",
  "has_linewatch": false,
  "price": null,
  "date": null,
  "info": "美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
  "url": "https://www.douban.com/doubanapp/dispatch/movie/3097572",
  "release_date": "10.18",
  "cover": {
    "url": "https://img3.doubanio.com/view/photo/m_ratio_poster/public/p2570906505.jpg",
    "width": 2187,
    "shape": "rectangle",
    "height": 3000
  },
  "uri": "douban://douban.com/movie/3097572",
  "subtype": "",
  "directors": [
    "李安"
  ],
  "reviewer_name": "",
  "null_rating_reason": ""
} 
*/

  String originalPrice;
  String abstracts;
  MovieShowModelDataSubjectCollectionBoardsItemsRating rating;
  List actions;
  String year;
  String cardSubtitle;
  String id;
  String title;
  String label;
  List<String> actors;
  String interest;
  String type;
  String forumInfo;
  String description;
  bool hasLinewatch;
  String price;
  String date;
  String info;
  String url;
  String releaseDate;
  MovieShowModelDataSubjectCollectionBoardsItemsCover cover;
  String uri;
  String subtype;
  List<String> directors;
  List<String> author;
  List<String> tag;
  String reviewerName;
  String nullRatingReason;
  int wishCount;
  int readCount;

  MovieShowModelDataSubjectCollectionBoardsItems({
    this.originalPrice,
    this.abstracts,
    this.readCount,
    this.rating,
    this.actions,
    this.year,
    this.cardSubtitle,
    this.id,
    this.title,
    this.label,
    this.actors,
    this.interest,
    this.type,
    this.forumInfo,
    this.description,
    this.hasLinewatch,
    this.price,
    this.date,
    this.info,
    this.url,
    this.releaseDate,
    this.cover,
    this.uri,
    this.subtype,
    this.directors,
    this.author,
    this.reviewerName,
    this.nullRatingReason,
    this.wishCount,
    this.tag
  });
  MovieShowModelDataSubjectCollectionBoardsItems.fromJson(Map<String, dynamic> json) {
    originalPrice = json["original_price"]?.toString();
    abstracts = json["abstract"]?.toString();
    wishCount = json["wish_count"];
    readCount = json["read_count"];
    rating = json["rating"] != null ? MovieShowModelDataSubjectCollectionBoardsItemsRating.fromJson(json["rating"]) : null;
    year = json["year"]?.toString();
    cardSubtitle = json["card_subtitle"]?.toString();
    id = json["id"]?.toString();
    title = json["title"]?.toString();
    label = json["label"]?.toString();
  if (json["actors"] != null) {
  var v = json["actors"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    actors = arr0;
    }
    interest = json["interest"]?.toString();
    type = json["type"]?.toString();
    forumInfo = json["forum_info"]?.toString();
    description = json["description"]?.toString();
    hasLinewatch = json["has_linewatch"];
    price = json["price"]?.toString();
    date = json["date"]?.toString();
    info = json["info"]?.toString();
    url = json["url"]?.toString();
    releaseDate = json["release_date"]?.toString();
    cover = json["cover"] != null ? MovieShowModelDataSubjectCollectionBoardsItemsCover.fromJson(json["cover"]) : null;
    uri = json["uri"]?.toString();
    subtype = json["subtype"]?.toString();
  if (json["directors"] != null) {
  var v = json["directors"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    directors = arr0;
    }
  if (json["author"] != null) {
  var v = json["author"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    author = arr0;
    }
  if (json["tag"] != null) {
  var v = json["tag"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    tag = arr0;
    }
    reviewerName = json["reviewer_name"]?.toString();
    nullRatingReason = json["null_rating_reason"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["original_price"] = originalPrice;
    data["abstract"] = abstracts;
    if (rating != null) {
      data["rating"] = rating.toJson();
    }
    data["year"] = year;
    data["card_subtitle"] = cardSubtitle;
    data["id"] = id;
    data["title"] = title;
    data["label"] = label;
    if (actors != null) {
      var v = actors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["actors"] = arr0;
    }
    data["interest"] = interest;
    data["type"] = type;
    data["forum_info"] = forumInfo;
    data["description"] = description;
    data["has_linewatch"] = hasLinewatch;
    data["price"] = price;
    data["date"] = date;
    data["info"] = info;
    data["url"] = url;
    data["release_date"] = releaseDate;
    if (cover != null) {
      data["cover"] = cover.toJson();
    }
    data["uri"] = uri;
    data["subtype"] = subtype;
    if (directors != null) {
      var v = directors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["directors"] = arr0;
    }
    if (author != null) {
      var v = author;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["directors"] = arr0;
    }
    if (tag != null) {
      var v = tag;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["tag"] = arr0;
    }
    data["reviewer_name"] = reviewerName;
    data["null_rating_reason"] = nullRatingReason;
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoardsSubjectCollectionDisplay {
/*
{
  "layout": "grid"
} 
*/

  String layout;

  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionDisplay({
    this.layout,
  });
  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionDisplay.fromJson(Map<String, dynamic> json) {
    layout = json["layout"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["layout"] = layout;
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoardsSubjectCollectionBackgroundColorScheme {
/*
{
  "is_dark": true,
  "primary_color_light": "6f6672",
  "secondary_color": "f8f4f9",
  "primary_color_dark": "4a444c"
} 
*/

  bool isDark;
  String primaryColorLight;
  String secondaryColor;
  String primaryColorDark;

  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionBackgroundColorScheme({
    this.isDark,
    this.primaryColorLight,
    this.secondaryColor,
    this.primaryColorDark,
  });
  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionBackgroundColorScheme.fromJson(Map<String, dynamic> json) {
    isDark = json["is_dark"];
    primaryColorLight = json["primary_color_light"]?.toString();
    secondaryColor = json["secondary_color"]?.toString();
    primaryColorDark = json["primary_color_dark"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["is_dark"] = isDark;
    data["primary_color_light"] = primaryColorLight;
    data["secondary_color"] = secondaryColor;
    data["primary_color_dark"] = primaryColorDark;
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoardsSubjectCollection {
/*
{
  "subject_type": "",
  "subtitle": "",
  "background_color_scheme": {
    "is_dark": true,
    "primary_color_light": "6f6672",
    "secondary_color": "f8f4f9",
    "primary_color_dark": "4a444c"
  },
  "updated_at": null,
  "type_text": "",
  "id": "movie_showing",
  "type_icon_bg_text": "",
  "show_header_mask": false,
  "medium_name": "",
  "description": "",
  "short_name": "",
  "cover_url": "",
  "show_rank": true,
  "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/subject_collection/movie_showing/",
  "subject_count": 54,
  "name": "影院热映",
  "url": "https://m.douban.com/app_topic/movie_showing",
  "uri": "douban://douban.com/subject_collection/movie_showing",
  "mini_program_page": "",
  "icon_fg_image": "",
  "more_description": "",
  "mini_program_name": "",
  "display": {
    "layout": "grid"
  }
} 
*/

  String subjectType;
  String subtitle;
  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionBackgroundColorScheme backgroundColorScheme;
  String updatedAt;
  String typeText;
  String id;
  String typeIconBgText;
  bool showHeaderMask;
  String mediumName;
  String description;
  String shortName;
  String coverUrl;
  bool showRank;
  String sharingUrl;
  int subjectCount;
  String name;
  String url;
  String uri;
  String miniProgramPage;
  String iconFgImage;
  String moreDescription;
  String miniProgramName;
  MovieShowModelDataSubjectCollectionBoardsSubjectCollectionDisplay display;

  MovieShowModelDataSubjectCollectionBoardsSubjectCollection({
    this.subjectType,
    this.subtitle,
    this.backgroundColorScheme,
    this.updatedAt,
    this.typeText,
    this.id,
    this.typeIconBgText,
    this.showHeaderMask,
    this.mediumName,
    this.description,
    this.shortName,
    this.coverUrl,
    this.showRank,
    this.sharingUrl,
    this.subjectCount,
    this.name,
    this.url,
    this.uri,
    this.miniProgramPage,
    this.iconFgImage,
    this.moreDescription,
    this.miniProgramName,
    this.display,
  });
  MovieShowModelDataSubjectCollectionBoardsSubjectCollection.fromJson(Map<String, dynamic> json) {
    subjectType = json["subject_type"]?.toString();
    subtitle = json["subtitle"]?.toString();
    backgroundColorScheme = json["background_color_scheme"] != null ? MovieShowModelDataSubjectCollectionBoardsSubjectCollectionBackgroundColorScheme.fromJson(json["background_color_scheme"]) : null;
    updatedAt = json["updated_at"]?.toString();
    typeText = json["type_text"]?.toString();
    id = json["id"]?.toString();
    typeIconBgText = json["type_icon_bg_text"]?.toString();
    showHeaderMask = json["show_header_mask"];
    mediumName = json["medium_name"]?.toString();
    description = json["description"]?.toString();
    shortName = json["short_name"]?.toString();
    coverUrl = json["cover_url"]?.toString();
    showRank = json["show_rank"];
    sharingUrl = json["sharing_url"]?.toString();
    subjectCount = json["subject_count"]?.toInt();
    name = json["name"]?.toString();
    url = json["url"]?.toString();
    uri = json["uri"]?.toString();
    miniProgramPage = json["mini_program_page"]?.toString();
    iconFgImage = json["icon_fg_image"]?.toString();
    moreDescription = json["more_description"]?.toString();
    miniProgramName = json["mini_program_name"]?.toString();
    display = json["display"] != null ? MovieShowModelDataSubjectCollectionBoardsSubjectCollectionDisplay.fromJson(json["display"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["subject_type"] = subjectType;
    data["subtitle"] = subtitle;
    if (backgroundColorScheme != null) {
      data["background_color_scheme"] = backgroundColorScheme.toJson();
    }
    data["updated_at"] = updatedAt;
    data["type_text"] = typeText;
    data["id"] = id;
    data["type_icon_bg_text"] = typeIconBgText;
    data["show_header_mask"] = showHeaderMask;
    data["medium_name"] = mediumName;
    data["description"] = description;
    data["short_name"] = shortName;
    data["cover_url"] = coverUrl;
    data["show_rank"] = showRank;
    data["sharing_url"] = sharingUrl;
    data["subject_count"] = subjectCount;
    data["name"] = name;
    data["url"] = url;
    data["uri"] = uri;
    data["mini_program_page"] = miniProgramPage;
    data["icon_fg_image"] = iconFgImage;
    data["more_description"] = moreDescription;
    data["mini_program_name"] = miniProgramName;
    if (display != null) {
      data["display"] = display.toJson();
    }
    return data;
  }
}

class MovieShowModelDataSubjectCollectionBoards {
/*
{
  "subject_collection": {
    "subject_type": "",
    "subtitle": "",
    "background_color_scheme": {
      "is_dark": true,
      "primary_color_light": "6f6672",
      "secondary_color": "f8f4f9",
      "primary_color_dark": "4a444c"
    },
    "updated_at": null,
    "type_text": "",
    "id": "movie_showing",
    "type_icon_bg_text": "",
    "show_header_mask": false,
    "medium_name": "",
    "description": "",
    "short_name": "",
    "cover_url": "",
    "show_rank": true,
    "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/subject_collection/movie_showing/",
    "subject_count": 54,
    "name": "影院热映",
    "url": "https://m.douban.com/app_topic/movie_showing",
    "uri": "douban://douban.com/subject_collection/movie_showing",
    "mini_program_page": "",
    "icon_fg_image": "",
    "more_description": "",
    "mini_program_name": "",
    "display": {
      "layout": "grid"
    }
  },
  "type": "movie",
  "items": [
    {
      "original_price": null,
      "rating": {
        "count": 6670,
        "max": 10,
        "value": 7
      },
      "actions": [
        null
      ],
      "year": "2019",
      "card_subtitle": "2019 / 美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
      "id": "3097572",
      "title": "双子杀手",
      "label": null,
      "actors": [
        "威尔·史密斯"
      ],
      "interest": null,
      "type": "movie",
      "forum_info": null,
      "description": "",
      "has_linewatch": false,
      "price": null,
      "date": null,
      "info": "美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
      "url": "https://www.douban.com/doubanapp/dispatch/movie/3097572",
      "release_date": "10.18",
      "cover": {
        "url": "https://img3.doubanio.com/view/photo/m_ratio_poster/public/p2570906505.jpg",
        "width": 2187,
        "shape": "rectangle",
        "height": 3000
      },
      "uri": "douban://douban.com/movie/3097572",
      "subtype": "",
      "directors": [
        "李安"
      ],
      "reviewer_name": "",
      "null_rating_reason": ""
    }
  ]
} 
*/

  MovieShowModelDataSubjectCollectionBoardsSubjectCollection subjectCollection;
  String type;
  List<MovieShowModelDataSubjectCollectionBoardsItems> items;

  MovieShowModelDataSubjectCollectionBoards({
    this.subjectCollection,
    this.type,
    this.items,
  });
  MovieShowModelDataSubjectCollectionBoards.fromJson(Map<String, dynamic> json) {
    subjectCollection = json["subject_collection"] != null ? MovieShowModelDataSubjectCollectionBoardsSubjectCollection.fromJson(json["subject_collection"]) : null;
    type = json["type"]?.toString();
  if (json["items"] != null) {
  var v = json["items"];
  var arr0 = List<MovieShowModelDataSubjectCollectionBoardsItems>();
  v.forEach((v) {
  arr0.add(MovieShowModelDataSubjectCollectionBoardsItems.fromJson(v));
  });
    items = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (subjectCollection != null) {
      data["subject_collection"] = subjectCollection.toJson();
    }
    data["type"] = type;
    if (items != null) {
      var v = items;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["items"] = arr0;
    }
    return data;
  }
}

class MovieShowModelData {
/*
{
  "subject_collection_boards": [
    {
      "subject_collection": {
        "subject_type": "",
        "subtitle": "",
        "background_color_scheme": {
          "is_dark": true,
          "primary_color_light": "6f6672",
          "secondary_color": "f8f4f9",
          "primary_color_dark": "4a444c"
        },
        "updated_at": null,
        "type_text": "",
        "id": "movie_showing",
        "type_icon_bg_text": "",
        "show_header_mask": false,
        "medium_name": "",
        "description": "",
        "short_name": "",
        "cover_url": "",
        "show_rank": true,
        "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/subject_collection/movie_showing/",
        "subject_count": 54,
        "name": "影院热映",
        "url": "https://m.douban.com/app_topic/movie_showing",
        "uri": "douban://douban.com/subject_collection/movie_showing",
        "mini_program_page": "",
        "icon_fg_image": "",
        "more_description": "",
        "mini_program_name": "",
        "display": {
          "layout": "grid"
        }
      },
      "type": "movie",
      "items": [
        {
          "original_price": null,
          "rating": {
            "count": 6670,
            "max": 10,
            "value": 7
          },
          "actions": [
            null
          ],
          "year": "2019",
          "card_subtitle": "2019 / 美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
          "id": "3097572",
          "title": "双子杀手",
          "label": null,
          "actors": [
            "威尔·史密斯"
          ],
          "interest": null,
          "type": "movie",
          "forum_info": null,
          "description": "",
          "has_linewatch": false,
          "price": null,
          "date": null,
          "info": "美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
          "url": "https://www.douban.com/doubanapp/dispatch/movie/3097572",
          "release_date": "10.18",
          "cover": {
            "url": "https://img3.doubanio.com/view/photo/m_ratio_poster/public/p2570906505.jpg",
            "width": 2187,
            "shape": "rectangle",
            "height": 3000
          },
          "uri": "douban://douban.com/movie/3097572",
          "subtype": "",
          "directors": [
            "李安"
          ],
          "reviewer_name": "",
          "null_rating_reason": ""
        }
      ]
    }
  ],
  "total": 1
} 
*/

  List<MovieShowModelDataSubjectCollectionBoards> subjectCollectionBoards;
  int total;

  MovieShowModelData({
    this.subjectCollectionBoards,
    this.total,
  });
  MovieShowModelData.fromJson(Map<String, dynamic> json) {
  if (json["subject_collection_boards"] != null) {
  var v = json["subject_collection_boards"];
  var arr0 = List<MovieShowModelDataSubjectCollectionBoards>();
  v.forEach((v) {
  arr0.add(MovieShowModelDataSubjectCollectionBoards.fromJson(v));
  });
    subjectCollectionBoards = arr0;
    }
    total = json["total"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (subjectCollectionBoards != null) {
      var v = subjectCollectionBoards;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["subject_collection_boards"] = arr0;
    }
    data["total"] = total;
    return data;
  }
}

class MovieShowModel {
/*
{
  "url": "",
  "module_name": "movie_showing",
  "data": {
    "subject_collection_boards": [
      {
        "subject_collection": {
          "subject_type": "",
          "subtitle": "",
          "background_color_scheme": {
            "is_dark": true,
            "primary_color_light": "6f6672",
            "secondary_color": "f8f4f9",
            "primary_color_dark": "4a444c"
          },
          "updated_at": null,
          "type_text": "",
          "id": "movie_showing",
          "type_icon_bg_text": "",
          "show_header_mask": false,
          "medium_name": "",
          "description": "",
          "short_name": "",
          "cover_url": "",
          "show_rank": true,
          "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/subject_collection/movie_showing/",
          "subject_count": 54,
          "name": "影院热映",
          "url": "https://m.douban.com/app_topic/movie_showing",
          "uri": "douban://douban.com/subject_collection/movie_showing",
          "mini_program_page": "",
          "icon_fg_image": "",
          "more_description": "",
          "mini_program_name": "",
          "display": {
            "layout": "grid"
          }
        },
        "type": "movie",
        "items": [
          {
            "original_price": null,
            "rating": {
              "count": 6670,
              "max": 10,
              "value": 7
            },
            "actions": [
              null
            ],
            "year": "2019",
            "card_subtitle": "2019 / 美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
            "id": "3097572",
            "title": "双子杀手",
            "label": null,
            "actors": [
              "威尔·史密斯"
            ],
            "interest": null,
            "type": "movie",
            "forum_info": null,
            "description": "",
            "has_linewatch": false,
            "price": null,
            "date": null,
            "info": "美国 中国大陆 / 剧情 动作 科幻 / 李安 / 威尔·史密斯 玛丽·伊丽莎白·温斯特德",
            "url": "https://www.douban.com/doubanapp/dispatch/movie/3097572",
            "release_date": "10.18",
            "cover": {
              "url": "https://img3.doubanio.com/view/photo/m_ratio_poster/public/p2570906505.jpg",
              "width": 2187,
              "shape": "rectangle",
              "height": 3000
            },
            "uri": "douban://douban.com/movie/3097572",
            "subtype": "",
            "directors": [
              "李安"
            ],
            "reviewer_name": "",
            "null_rating_reason": ""
          }
        ]
      }
    ],
    "total": 1
  },
  "uri": "douban://douban.com/tag/49/subject_collection_boards",
  "key": "subject_collection_boards"
} 
*/

  String url;
  String moduleName;
  MovieShowModelData data;
  String uri;
  String key;

  MovieShowModel({
    this.url,
    this.moduleName,
    this.data,
    this.uri,
    this.key,
  });
  MovieShowModel.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    moduleName = json["module_name"]?.toString();
    data = json["data"] != null ? MovieShowModelData.fromJson(json["data"]) : null;
    uri = json["uri"]?.toString();
    key = json["key"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["module_name"] = moduleName;
    if (data != null) {
      data["data"] = this.data.toJson();
    }
    data["uri"] = uri;
    data["key"] = key;
    return data;
  }
}

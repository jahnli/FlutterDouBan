///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class FilmDetailActorModelActorsAvatar {
/*
{
  "large": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp",
  "normal": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp"
} 
*/

  String large;
  String normal;

  FilmDetailActorModelActorsAvatar({
    this.large,
    this.normal,
  });
  FilmDetailActorModelActorsAvatar.fromJson(Map<String, dynamic> json) {
    large = json["large"]?.toString();
    normal = json["normal"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["large"] = large;
    data["normal"] = normal;
    return data;
  }
}

class FilmDetailActorModelActors {
/*
{
  "user": null,
  "roles": [
    "演员"
  ],
  "latin_name": "Bo Huang",
  "author": null,
  "url": "https://movie.douban.com/celebrity/1274242/",
  "abstract": "　　黄渤不但具有专业的表演素质，在他身上更散发着来自内心的真实与质朴。他曾经做过歌手、节目主持人...",
  "title": "黄渤（同名）中国,山东,青岛影视演员",
  "character": "饰 林治远",
  "uri": "douban://douban.com/celebrity/1274242?subject_id=27481212",
  "cover_url": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp",
  "avatar": {
    "large": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp",
    "normal": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp"
  },
  "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/celebrity/1274242/",
  "type": "celebrity",
  "id": "1274242",
  "name": "黄渤"
} 
*/

  String user;
  List<String> roles;
  String latinName;
  String author;
  String url;
  String theAbstract;
  String title;
  String character;
  String uri;
  String coverUrl;
  FilmDetailActorModelActorsAvatar avatar;
  String sharingUrl;
  String type;
  String id;
  String name;

  FilmDetailActorModelActors({
    this.user,
    this.roles,
    this.latinName,
    this.author,
    this.url,
    this.theAbstract,
    this.title,
    this.character,
    this.uri,
    this.coverUrl,
    this.avatar,
    this.sharingUrl,
    this.type,
    this.id,
    this.name,
  });
  FilmDetailActorModelActors.fromJson(Map<String, dynamic> json) {
    user = json["user"]?.toString();
  if (json["roles"] != null) {
  var v = json["roles"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    roles = arr0;
    }
    latinName = json["latin_name"]?.toString();
    author = json["author"]?.toString();
    url = json["url"]?.toString();
    theAbstract = json["abstract"]?.toString();
    title = json["title"]?.toString();
    character = json["character"]?.toString();
    uri = json["uri"]?.toString();
    coverUrl = json["cover_url"]?.toString();
    avatar = json["avatar"] != null ? FilmDetailActorModelActorsAvatar.fromJson(json["avatar"]) : null;
    sharingUrl = json["sharing_url"]?.toString();
    type = json["type"]?.toString();
    id = json["id"]?.toString();
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["user"] = user;
    if (roles != null) {
      var v = roles;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["roles"] = arr0;
    }
    data["latin_name"] = latinName;
    data["author"] = author;
    data["url"] = url;
    data["abstract"] = theAbstract;
    data["title"] = title;
    data["character"] = character;
    data["uri"] = uri;
    data["cover_url"] = coverUrl;
    if (avatar != null) {
      data["avatar"] = avatar.toJson();
    }
    data["sharing_url"] = sharingUrl;
    data["type"] = type;
    data["id"] = id;
    data["name"] = name;
    return data;
  }
}

class FilmDetailActorModelDirectorsAvatar {
/*
{
  "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp",
  "normal": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp"
} 
*/

  String large;
  String normal;

  FilmDetailActorModelDirectorsAvatar({
    this.large,
    this.normal,
  });
  FilmDetailActorModelDirectorsAvatar.fromJson(Map<String, dynamic> json) {
    large = json["large"]?.toString();
    normal = json["normal"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["large"] = large;
    data["normal"] = normal;
    return data;
  }
}

class FilmDetailActorModelDirectors {
/*
{
  "user": null,
  "roles": [
    "导演"
  ],
  "latin_name": "Kaige Chen",
  "author": null,
  "url": "https://movie.douban.com/celebrity/1023040/",
  "abstract": "陈凯歌出身于艺术家庭，少年时期经历过文革和插队。1970年，陈凯歌参军。1974年复员转业1976年到北京电...",
  "title": "陈凯歌（同名）中国,北京影视演员",
  "character": "总导演",
  "uri": "douban://douban.com/celebrity/1023040?subject_id=27228768",
  "cover_url": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp",
  "avatar": {
    "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp",
    "normal": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp"
  },
  "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/celebrity/1023040/",
  "type": "celebrity",
  "id": "1023040",
  "name": "陈凯歌"
} 
*/

  String user;
  List<String> roles;
  String latinName;
  String author;
  String url;
  String theAbstract;
  String title;
  String character;
  String uri;
  String coverUrl;
  FilmDetailActorModelDirectorsAvatar avatar;
  String sharingUrl;
  String type;
  String id;
  String name;

  FilmDetailActorModelDirectors({
    this.user,
    this.roles,
    this.latinName,
    this.author,
    this.url,
    this.theAbstract,
    this.title,
    this.character,
    this.uri,
    this.coverUrl,
    this.avatar,
    this.sharingUrl,
    this.type,
    this.id,
    this.name,
  });
  FilmDetailActorModelDirectors.fromJson(Map<String, dynamic> json) {
    user = json["user"]?.toString();
  if (json["roles"] != null) {
  var v = json["roles"];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v.toString());
  });
    roles = arr0;
    }
    latinName = json["latin_name"]?.toString();
    author = json["author"]?.toString();
    url = json["url"]?.toString();
    theAbstract = json["abstract"]?.toString();
    title = json["title"]?.toString();
    character = json["character"]?.toString();
    uri = json["uri"]?.toString();
    coverUrl = json["cover_url"]?.toString();
    avatar = json["avatar"] != null ? FilmDetailActorModelDirectorsAvatar.fromJson(json["avatar"]) : null;
    sharingUrl = json["sharing_url"]?.toString();
    type = json["type"]?.toString();
    id = json["id"]?.toString();
    name = json["name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["user"] = user;
    if (roles != null) {
      var v = roles;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data["roles"] = arr0;
    }
    data["latin_name"] = latinName;
    data["author"] = author;
    data["url"] = url;
    data["abstract"] = theAbstract;
    data["title"] = title;
    data["character"] = character;
    data["uri"] = uri;
    data["cover_url"] = coverUrl;
    if (avatar != null) {
      data["avatar"] = avatar.toJson();
    }
    data["sharing_url"] = sharingUrl;
    data["type"] = type;
    data["id"] = id;
    data["name"] = name;
    return data;
  }
}

class FilmDetailActorModel {
/*
{
  "directors": [
    {
      "user": null,
      "roles": [
        "导演"
      ],
      "latin_name": "Kaige Chen",
      "author": null,
      "url": "https://movie.douban.com/celebrity/1023040/",
      "abstract": "陈凯歌出身于艺术家庭，少年时期经历过文革和插队。1970年，陈凯歌参军。1974年复员转业1976年到北京电...",
      "title": "陈凯歌（同名）中国,北京影视演员",
      "character": "总导演",
      "uri": "douban://douban.com/celebrity/1023040?subject_id=27228768",
      "cover_url": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp",
      "avatar": {
        "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp",
        "normal": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1451727734.81.webp"
      },
      "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/celebrity/1023040/",
      "type": "celebrity",
      "id": "1023040",
      "name": "陈凯歌"
    }
  ],
  "total": 137,
  "actors": [
    {
      "user": null,
      "roles": [
        "演员"
      ],
      "latin_name": "Bo Huang",
      "author": null,
      "url": "https://movie.douban.com/celebrity/1274242/",
      "abstract": "　　黄渤不但具有专业的表演素质，在他身上更散发着来自内心的真实与质朴。他曾经做过歌手、节目主持人...",
      "title": "黄渤（同名）中国,山东,青岛影视演员",
      "character": "饰 林治远",
      "uri": "douban://douban.com/celebrity/1274242?subject_id=27481212",
      "cover_url": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp",
      "avatar": {
        "large": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp",
        "normal": "https://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1656.webp"
      },
      "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/celebrity/1274242/",
      "type": "celebrity",
      "id": "1274242",
      "name": "黄渤"
    }
  ]
} 
*/

  List<FilmDetailActorModelDirectors> directors;
  int total;
  List<FilmDetailActorModelActors> actors;

  FilmDetailActorModel({
    this.directors,
    this.total,
    this.actors,
  });
  FilmDetailActorModel.fromJson(Map<String, dynamic> json) {
  if (json["directors"] != null) {
  var v = json["directors"];
  var arr0 = List<FilmDetailActorModelDirectors>();
  v.forEach((v) {
  arr0.add(FilmDetailActorModelDirectors.fromJson(v));
  });
    directors = arr0;
    }
    total = json["total"]?.toInt();
  if (json["actors"] != null) {
  var v = json["actors"];
  var arr0 = List<FilmDetailActorModelActors>();
  v.forEach((v) {
  arr0.add(FilmDetailActorModelActors.fromJson(v));
  });
    actors = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (directors != null) {
      var v = directors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["directors"] = arr0;
    }
    data["total"] = total;
    if (actors != null) {
      var v = actors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["actors"] = arr0;
    }
    return data;
  }
}

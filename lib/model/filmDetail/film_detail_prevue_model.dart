///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class FilmDetailPrevueModelPhotosAuthor {
/*
{
  "loc": null,
  "kind": "user",
  "name": "hjmdsg",
  "reg_time": "2017-04-24 20:18:37",
  "url": "https://www.douban.com/people/160673690/",
  "uri": "douban://douban.com/user/160673690",
  "avatar": "https://img3.doubanio.com/icon/up160673690-1.jpg",
  "type": "user",
  "id": "160673690",
  "uid": "160673690"
} 
*/

  String loc;
  String kind;
  String name;
  String regTime;
  String url;
  String uri;
  String avatar;
  String type;
  String id;
  String uid;

  FilmDetailPrevueModelPhotosAuthor({
    this.loc,
    this.kind,
    this.name,
    this.regTime,
    this.url,
    this.uri,
    this.avatar,
    this.type,
    this.id,
    this.uid,
  });
  FilmDetailPrevueModelPhotosAuthor.fromJson(Map<String, dynamic> json) {
    loc = json["loc"]?.toString();
    kind = json["kind"]?.toString();
    name = json["name"]?.toString();
    regTime = json["reg_time"]?.toString();
    url = json["url"]?.toString();
    uri = json["uri"]?.toString();
    avatar = json["avatar"]?.toString();
    type = json["type"]?.toString();
    id = json["id"]?.toString();
    uid = json["uid"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["loc"] = loc;
    data["kind"] = kind;
    data["name"] = name;
    data["reg_time"] = regTime;
    data["url"] = url;
    data["uri"] = uri;
    data["avatar"] = avatar;
    data["type"] = type;
    data["id"] = id;
    data["uid"] = uid;
    return data;
  }
}

class FilmDetailPrevueModelPhotosImageNormal {
/*
{
  "url": "https://img3.doubanio.com/view/photo/m/public/p2570208432.webp",
  "width": 305,
  "size": 0,
  "height": 600
} 
*/

  String url;
  int width;
  int size;
  int height;

  FilmDetailPrevueModelPhotosImageNormal({
    this.url,
    this.width,
    this.size,
    this.height,
  });
  FilmDetailPrevueModelPhotosImageNormal.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    width = json["width"]?.toInt();
    size = json["size"]?.toInt();
    height = json["height"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["width"] = width;
    data["size"] = size;
    data["height"] = height;
    return data;
  }
}

class FilmDetailPrevueModelPhotosImageSmall {
/*
{
  "url": "https://img3.doubanio.com/view/photo/s/public/p2570208432.webp",
  "width": 305,
  "size": 0,
  "height": 600
} 
*/

  String url;
  int width;
  int size;
  int height;

  FilmDetailPrevueModelPhotosImageSmall({
    this.url,
    this.width,
    this.size,
    this.height,
  });
  FilmDetailPrevueModelPhotosImageSmall.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    width = json["width"]?.toInt();
    size = json["size"]?.toInt();
    height = json["height"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["width"] = width;
    data["size"] = size;
    data["height"] = height;
    return data;
  }
}

class FilmDetailPrevueModelPhotosImageLarge {
/*
{
  "url": "https://img3.doubanio.com/view/photo/l/public/p2570208432.webp",
  "width": 550,
  "size": 0,
  "height": 1080
} 
*/

  String url;
  int width;
  int size;
  int height;

  FilmDetailPrevueModelPhotosImageLarge({
    this.url,
    this.width,
    this.size,
    this.height,
  });
  FilmDetailPrevueModelPhotosImageLarge.fromJson(Map<String, dynamic> json) {
    url = json["url"]?.toString();
    width = json["width"]?.toInt();
    size = json["size"]?.toInt();
    height = json["height"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["url"] = url;
    data["width"] = width;
    data["size"] = size;
    data["height"] = height;
    return data;
  }
}

class FilmDetailPrevueModelPhotosImage {
/*
{
  "large": {
    "url": "https://img3.doubanio.com/view/photo/l/public/p2570208432.webp",
    "width": 550,
    "size": 0,
    "height": 1080
  },
  "raw": null,
  "small": {
    "url": "https://img3.doubanio.com/view/photo/s/public/p2570208432.webp",
    "width": 305,
    "size": 0,
    "height": 600
  },
  "normal": {
    "url": "https://img3.doubanio.com/view/photo/m/public/p2570208432.webp",
    "width": 305,
    "size": 0,
    "height": 600
  },
  "is_animated": false
} 
*/

  FilmDetailPrevueModelPhotosImageLarge large;
  String raw;
  FilmDetailPrevueModelPhotosImageSmall small;
  FilmDetailPrevueModelPhotosImageNormal normal;
  bool isAnimated;

  FilmDetailPrevueModelPhotosImage({
    this.large,
    this.raw,
    this.small,
    this.normal,
    this.isAnimated,
  });
  FilmDetailPrevueModelPhotosImage.fromJson(Map<String, dynamic> json) {
    large = json["large"] != null ? FilmDetailPrevueModelPhotosImageLarge.fromJson(json["large"]) : null;
    raw = json["raw"]?.toString();
    small = json["small"] != null ? FilmDetailPrevueModelPhotosImageSmall.fromJson(json["small"]) : null;
    normal = json["normal"] != null ? FilmDetailPrevueModelPhotosImageNormal.fromJson(json["normal"]) : null;
    isAnimated = json["is_animated"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (large != null) {
      data["large"] = large.toJson();
    }
    data["raw"] = raw;
    if (small != null) {
      data["small"] = small.toJson();
    }
    if (normal != null) {
      data["normal"] = normal.toJson();
    }
    data["is_animated"] = isAnimated;
    return data;
  }
}

class FilmDetailPrevueModelPhotos {
/*
{
  "read_count": 15420,
  "image": {
    "large": {
      "url": "https://img3.doubanio.com/view/photo/l/public/p2570208432.webp",
      "width": 550,
      "size": 0,
      "height": 1080
    },
    "raw": null,
    "small": {
      "url": "https://img3.doubanio.com/view/photo/s/public/p2570208432.webp",
      "width": 305,
      "size": 0,
      "height": 600
    },
    "normal": {
      "url": "https://img3.doubanio.com/view/photo/m/public/p2570208432.webp",
      "width": 305,
      "size": 0,
      "height": 600
    },
    "is_animated": false
  },
  "create_time": "2019-10-01 16:52:58",
  "collections_count": 29,
  "reshares_count": 2,
  "id": "2570208432",
  "author": {
    "loc": null,
    "kind": "user",
    "name": "hjmdsg",
    "reg_time": "2017-04-24 20:18:37",
    "url": "https://www.douban.com/people/160673690/",
    "uri": "douban://douban.com/user/160673690",
    "avatar": "https://img3.doubanio.com/icon/up160673690-1.jpg",
    "type": "user",
    "id": "160673690",
    "uid": "160673690"
  },
  "is_collected": false,
  "subtype": "photo",
  "type": "photo",
  "owner_uri": "douban://douban.com/movie/32659890",
  "status": null,
  "reaction_type": 0,
  "description": "",
  "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/photo/2570208432/",
  "url": "https://movie.douban.com/photos/photo/2570208432/",
  "reply_limit": "A",
  "uri": "douban://douban.com/photo/2570208432",
  "likers_count": 373,
  "reactions_count": 373,
  "comments_count": 87,
  "position": 5
} 
*/

  int readCount;
  FilmDetailPrevueModelPhotosImage image;
  String createTime;
  int collectionsCount;
  int resharesCount;
  String id;
  FilmDetailPrevueModelPhotosAuthor author;
  bool isCollected;
  String subtype;
  String type;
  String ownerUri;
  String status;
  int reactionType;
  String description;
  String sharingUrl;
  String url;
  String replyLimit;
  String uri;
  int likersCount;
  int reactionsCount;
  int commentsCount;
  int position;

  FilmDetailPrevueModelPhotos({
    this.readCount,
    this.image,
    this.createTime,
    this.collectionsCount,
    this.resharesCount,
    this.id,
    this.author,
    this.isCollected,
    this.subtype,
    this.type,
    this.ownerUri,
    this.status,
    this.reactionType,
    this.description,
    this.sharingUrl,
    this.url,
    this.replyLimit,
    this.uri,
    this.likersCount,
    this.reactionsCount,
    this.commentsCount,
    this.position,
  });
  FilmDetailPrevueModelPhotos.fromJson(Map<String, dynamic> json) {
    readCount = json["read_count"]?.toInt();
    image = json["image"] != null ? FilmDetailPrevueModelPhotosImage.fromJson(json["image"]) : null;
    createTime = json["create_time"]?.toString();
    collectionsCount = json["collections_count"]?.toInt();
    resharesCount = json["reshares_count"]?.toInt();
    id = json["id"]?.toString();
    author = json["author"] != null ? FilmDetailPrevueModelPhotosAuthor.fromJson(json["author"]) : null;
    isCollected = json["is_collected"];
    subtype = json["subtype"]?.toString();
    type = json["type"]?.toString();
    ownerUri = json["owner_uri"]?.toString();
    status = json["status"]?.toString();
    reactionType = json["reaction_type"]?.toInt();
    description = json["description"]?.toString();
    sharingUrl = json["sharing_url"]?.toString();
    url = json["url"]?.toString();
    replyLimit = json["reply_limit"]?.toString();
    uri = json["uri"]?.toString();
    likersCount = json["likers_count"]?.toInt();
    reactionsCount = json["reactions_count"]?.toInt();
    commentsCount = json["comments_count"]?.toInt();
    position = json["position"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["read_count"] = readCount;
    if (image != null) {
      data["image"] = image.toJson();
    }
    data["create_time"] = createTime;
    data["collections_count"] = collectionsCount;
    data["reshares_count"] = resharesCount;
    data["id"] = id;
    if (author != null) {
      data["author"] = author.toJson();
    }
    data["is_collected"] = isCollected;
    data["subtype"] = subtype;
    data["type"] = type;
    data["owner_uri"] = ownerUri;
    data["status"] = status;
    data["reaction_type"] = reactionType;
    data["description"] = description;
    data["sharing_url"] = sharingUrl;
    data["url"] = url;
    data["reply_limit"] = replyLimit;
    data["uri"] = uri;
    data["likers_count"] = likersCount;
    data["reactions_count"] = reactionsCount;
    data["comments_count"] = commentsCount;
    data["position"] = position;
    return data;
  }
}

class FilmDetailPrevueModel {
/*
{
  "count": 8,
  "c": 64,
  "f": 1,
  "o": 65,
  "n": 68,
  "photos": [
    {
      "read_count": 15420,
      "image": {
        "large": {
          "url": "https://img3.doubanio.com/view/photo/l/public/p2570208432.webp",
          "width": 550,
          "size": 0,
          "height": 1080
        },
        "raw": null,
        "small": {
          "url": "https://img3.doubanio.com/view/photo/s/public/p2570208432.webp",
          "width": 305,
          "size": 0,
          "height": 600
        },
        "normal": {
          "url": "https://img3.doubanio.com/view/photo/m/public/p2570208432.webp",
          "width": 305,
          "size": 0,
          "height": 600
        },
        "is_animated": false
      },
      "create_time": "2019-10-01 16:52:58",
      "collections_count": 29,
      "reshares_count": 2,
      "id": "2570208432",
      "author": {
        "loc": null,
        "kind": "user",
        "name": "hjmdsg",
        "reg_time": "2017-04-24 20:18:37",
        "url": "https://www.douban.com/people/160673690/",
        "uri": "douban://douban.com/user/160673690",
        "avatar": "https://img3.doubanio.com/icon/up160673690-1.jpg",
        "type": "user",
        "id": "160673690",
        "uid": "160673690"
      },
      "is_collected": false,
      "subtype": "photo",
      "type": "photo",
      "owner_uri": "douban://douban.com/movie/32659890",
      "status": null,
      "reaction_type": 0,
      "description": "",
      "sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/photo/2570208432/",
      "url": "https://movie.douban.com/photos/photo/2570208432/",
      "reply_limit": "A",
      "uri": "douban://douban.com/photo/2570208432",
      "likers_count": 373,
      "reactions_count": 373,
      "comments_count": 87,
      "position": 5
    }
  ],
  "w": 9,
  "total": 207,
  "start": 0
} 
*/

  int count;
  int c;
  int f;
  int o;
  int n;
  List<FilmDetailPrevueModelPhotos> photos;
  int w;
  int total;
  int start;

  FilmDetailPrevueModel({
    this.count,
    this.c,
    this.f,
    this.o,
    this.n,
    this.photos,
    this.w,
    this.total,
    this.start,
  });
  FilmDetailPrevueModel.fromJson(Map<String, dynamic> json) {
    count = json["count"]?.toInt();
    c = json["c"]?.toInt();
    f = json["f"]?.toInt();
    o = json["o"]?.toInt();
    n = json["n"]?.toInt();
  if (json["photos"] != null) {
  var v = json["photos"];
  var arr0 = List<FilmDetailPrevueModelPhotos>();
  v.forEach((v) {
  arr0.add(FilmDetailPrevueModelPhotos.fromJson(v));
  });
    photos = arr0;
    }
    w = json["w"]?.toInt();
    total = json["total"]?.toInt();
    start = json["start"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["count"] = count;
    data["c"] = c;
    data["f"] = f;
    data["o"] = o;
    data["n"] = n;
    if (photos != null) {
      var v = photos;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data["photos"] = arr0;
    }
    data["w"] = w;
    data["total"] = total;
    data["start"] = start;
    return data;
  }
}
